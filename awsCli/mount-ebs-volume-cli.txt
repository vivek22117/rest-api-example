#FIND EC2 INSTANCE TO MOUNT EBS
INSTANCE_ID=$(aws --profile dev ec2 describe-instances \
            --filters Name=instance-state-name, Values=running "Name=private-ip-address, Values=10.4*" \
            'Reservation[0].Instances[0].InstanceId' --output table)

#ASSOCIATE INSTANCE PROFIle TO INSTANCE
aws --profile dev ec2 associate-iam-instance-profile \
--iam-instance-profile Name=RootInstanceProfile \
--instance-id ${INSTANCE_ID}

#CAPTURE EC2 INSTANCE PUBLIC IP
 INSTANCE_PUBLIC_IP = $(aws --profile dev ec2 describe-instances \
--instance-ids ${INSTANCE_ID} --query \
'Reservations[0].Instanaces[0].PublicIpAddress' --output text)


##SSH INTO EC2 INSTANCE AND RUN....BELOW COMMANDS FROM INSTANCE

curl http://169.254.169.254/latest/meta-data/iam/info

INSTANCE_ID = $(curl -s http://169.254.169.254/latest/meta-data/instance-id)
AZ = $(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone)
REGION = $(AZ::-1)

VOLUME_ID = $(aws --region ${REGION} ec2 describe-volumes \
--filters Name=availability-zone, Values=${AZ} Name=status, Values=available Name=tag:Service, Values=webservice \
--query 'Volumes[0].VolumeId' --output test)

#LIST BLOCK DEVICES TO SEE xvd vs sd (TO CHECK NAMING SCHEME USED BY INSTANCE)
sudo lsblk

#ATTACH VOLUME
aws --region ${REGION} ec2 attach-volume --device /dev/xvdb --instance-id ${INSTANCE_ID} --volume-id ${VOLUME_ID}


#WAIT FOR VOLUME TO GET ATTACHED
aws --region ${REGION} ec2 wait volume-in-use --volume-ids ${VOLUME_ID}

#LIST BLOCK DEVICES AGAIN TO CHECK
sudo lsblk

#IF MOUNTING AN EMPTY VOLUME FORMAT IT (DEPENDS ON CONDITION)
sudo mkfs -t ext4 /dev/xvdb

#NOW MAKE A FOLDER TO MOUNT or MOUNT POINT AND MOUNT VOLUME
sudo mkdir /var/webservice
sudo mount /dev/xvdb /var/webservice

#VERIFY MOUNT
df

